import std/[osproc, strutils]
import winregistry

proc getProductUUIDFromShell*(): string =
  ## the universally unique identifier assigned to the computer system product.
  ## This identifier is typically generated by the manufacturer and corresponds to a specific hardware product.
  let (output, code) = execCmdEx("powershell.exe (Get-CimInstance -Class Win32_ComputerSystemProduct).UUID")
  if code != 0: return
  return output.strip()

proc geMachineGUIDFromRegistry*(): string =
  ## the `MachineGuid` obtained from the registry represents the globally unique identifier (GUID)
  ## assigned to the computer by the Windows operating system during the installation process.
  var h: RegHandle

  try:
    h = open("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography", samRead)
    result = h.readString("MachineGuid")
  except OSError:
    return
  finally:
    close(h)

proc getProductIdFromRegistry*(): string =
  var h: RegHandle

  try:
    h = open("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", samRead)
    result = h.readString("ProductId")
  except OSError:
    return
  finally:
    close(h)

when isMainModule:
  echo getProductIdFromRegistry()
  echo getProductUUIDFromShell()
  echo geMachineGUIDFromRegistry()
